# General configuration
[General]
# Configuration file name
cfgfile="test.ini"
# Installation path for Go and repository
installPath="/usr/local/src/"

# Select OS type, ubuntu or centos
#[ubuntu|centos]
osType=ubuntu   

# When you start this script for the first time, you must set the value of installDB or installTsbs to true
# If you execute tsbs_comparison.sh or tsbs_test.sh repeatedly, you can set them to false.
# Install PostgreSQL/TimescaleDB/InfluxDB1.8/InfluxDB3/TDengine
#[true|false]
installDB=true
# Install TSBS executable
#[true|false]
installTsbs=true

# Load and Query Parameters
# Configure the machine IP and hostname of client and server.
# Configure the machine password of the server.
clientIP="127.0.0.1"
clientHost="localhost"
serverIP="127.0.0.1"
serverHost="localhost"
serverPass="taosdata"

# Test case selection
# Available options: [cputest | cpu | devops | iottest | iot | userdefined]
# cputest, iottest: Minimal time to validate test scripts.
# cpu: Execute test case for the specified CPU-only scenario.
# devops: Execute test case for the specified DevOps scenario.
# iot: Execute test case for the specified IoT scenario.
# userdefined: When caseTypes is set to userdefined, the parameter 'case' takes effect.
# To test both CPU and IoT cases, set caseTypes="cpu iot".
caseTypes="cputest"

# Effective when caseTypes is userdefined
# [cpu-only | devops | iot]
case="cpu-only"

# Specify whether to perform load, query, or both
# Available options: [load | query | both]
# For load, [LoadConfig], [Load], [LoadTimeScale] parameters will take effect. 
# If running cputest or iottest cases, [LoadConfig], [LoadTest], [LoadTestTimeScale] parameters will take effect.
# For query, [QueryConfig], [Query] parameters will take effect.
# If running cputest or iottest cases, [QueryTest] parameters will take effect.
operation_mode="both"

# Data paths
# Check the real path in RootDir when executing scripts
loadDataRootDir="/data/tsbs/"
queryDataRootDir="/data/tsbs/"

# Load parameters
[LoadConfig]
# Number of workers for load test
load_number_workers="12"
# Batch size for load test
load_batch_sizes="10000"
# Data formats for load test: [TDengine|influx|timescaledb|TDengineStmt2|influx3]
load_formats="TDengineStmt2 influx3 influx timescaledb"
load_fsync="3000"
vgroups="6"
trigger="1"
# Horizontal scaling factor for load data
horizontal_scaling_factor = 1

[Load]
# Scale factor for load test
load_scales="100 4000 100000 1000000 10000000"
# Load time and scale mapping
[LoadTimeScale]
# The format is "scale=startTime endTime LogInterval". The time format is "YYYY-MM-DDTHH:MM:SSZ".
# The LogInterval is the time interval for writing data, in seconds.
# If it is not specified for a scale, the default is "2016-01-01T00:00:00Z 2016-01-01T00:03:00Z 10s".
100="2016-01-01T00:00:00Z 2016-01-03T00:00:00Z 10s"
4000="2016-01-01T00:00:00Z 2016-01-03T00:00:00Z 10s"
100000="2016-01-01T00:00:00Z 2016-01-01T03:00:00Z 10s"
1000000="2016-01-01T00:00:00Z 2016-01-01T00:03:00Z 10s"
10000000="2016-01-01T00:00:00Z 2016-01-01T00:03:00Z 10s"

# Load test parameters for quick validation
[LoadTest]
load_scales="200"
[LoadTestTimeScale]
200="2016-01-01T00:00:00Z 2016-01-01T12:00:00Z 10s"

# Query parameters
[QueryConfig]
# Number of workers for query test
query_number_workers="8"
# Query formats for query test: [TDengineStmt2|TDengine|influx|timescaledb|influx3]
query_formats="TDengineStmt2 influx3 influx timescaledb"
# Reload data for query test
reload_data="true"
# Query debug flag
query_debug="false"
# Batch size for query load
query_load_batch_size="30000"
# workers for query load
query_load_workers="8"
# query types
query_types_cpu_all="single-groupby-1-1-1 \
single-groupby-1-1-12 \
single-groupby-1-8-1 \
single-groupby-5-1-1 \
single-groupby-5-1-12 \
single-groupby-5-8-1 \
cpu-max-all-1 \
cpu-max-all-8 \
double-groupby-1 \
double-groupby-5 \
double-groupby-all \
high-cpu-1 \
high-cpu-all \
groupby-orderby-limit \
lastpoint"
# IoT test parameters
query_types_iot_all="last-loc \
low-fuel \
high-load \
stationary-trucks \
long-driving-sessions \
long-daily-sessions \
avg-vs-projected-fuel-consumption \
avg-daily-driving-duration \
avg-daily-driving-session \
avg-load \
daily-activity \
breakdown-frequency"
# Devops test parameters
query_devops_scale_times="200,10"
# Userdefined test parameters
query_userdefined_scale_times="200,10"

[Query]
# Query test start and end timestamps. Duration time must be larger than 12h. LOG interval is 10s
query_ts_start="2016-01-01T00:00:00Z"
query_load_ts_end="2016-01-02T00:00:00Z"
query_ts_end="2016-01-02T00:00:01Z"
# query scale and times for query test, the format is "scale1,querytimes1 scale2,querytimes2"
query_cpu_scale_times="100,4000 4000,4000"
query_iot_scale_times="100,10000 4000,500"

# Query test parameters for quick validation
[QueryTest]
query_ts_start="2016-01-01T00:00:00Z"
query_load_ts_end="2016-01-02T00:00:00Z"
query_ts_end="2016-01-02T00:00:01Z"
query_cpu_scale_times="200,10"
query_iot_scale_times="200,10"

# Report
[Report]
# Report generation flag: [true|false]
report="true"

[Advanced]
# Database configuration: Data directory and port
tdengine_data_dir="/var/lib/taos/"
tdengine_port="6030"
influx_data_dir="/var/lib/influxdb/"
influx_port="8086"
influx3_data_dir="/var/lib/influxdb3/"
influx3_port="8181"
timescaledb_data_dir="/var/lib/postgresql/14/main/base/"
timescaledb_port="5432"