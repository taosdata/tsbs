# Configure install path and file name
# Go and repository will be installed in this installPath
cfgfile="test.ini"
installPath="/usr/local/src/"

# Select OS type, ubuntu or centos
#[ubuntu|centos]
osType=ubuntu   

# When you first start this script, you must set installGoEnv/installDB/installTsbs to true.
# When you repeat execute tsdbComparison.sh or testTsbs.sh, you can set these to false

# Install test environment, when it is true, installGoEnv/installDB/installTsbs will take effect 
installEnvAll=true
# Install Go environment
#[true|false]
installGoEnv=true
# Install PostgreSQL/TimescaleDB/InfluxDB/TDengine
#[true|false]
installDB=true
# Install TSBS executable
#[true|false]
installTsbs=true

# Load and Query Parameters
# You must configure the machine IP and hostname of client and server.
# You must configure the machine password of the server.
clientIP="127.0.0.1"
clientHost="localhost"
serverIP="127.0.0.1"
serverHost="localhost"
serverPass="taosdata1234"

# What kind of test case you choose 
# [cputest | cpu | devops | iot | userdefined ]
# cputest: you can use minimal time to validate whether test scripts are correct
# cpu: you can execute test case of specified cpu-only scenario
# devops: you can execute test case of specified devops scenario
# iot: you can execute test case of specified iot scenario
# userdefined: when caseTypes is userdefined, the parameter of case takes effect.
# If you want to test cpu and iot case, you can set caseTypes="cpu iot"
caseTypes="cputest"

# It takes effect when the caseTypes is userdefined
#[cpu-only | devops | iot]
case="cpu-only"

# Data and result root path
# You can check the real path in RootDir when executing scripts
loadDataRootDir="/data2/"
loadResultRootDir="/data2/"
queryDataRootDir="/data2/"
queryResultRootDir="/data2/"

# Load test parameters
load_ts_start="2016-01-01T00:00:00Z"
load_ts_end="2016-01-02T00:00:00Z"
load_number_workers="12"
load_batchsizes="10000"

# Don't recommend modifying
# load_formats only supports TDengine, influx, timescaledb.
load_scales="4000"
load_formats="TDengine influx timescaledb"
load_test_scales="200"
load_fsync="3000"
vgroups="6"
triggers="1"

# Query test parameters
# Duration time must be larger than 12h 
query_ts_start="2016-01-01T00:00:00Z"
query_load_ts_end="2016-01-05T00:00:00Z"
query_ts_end="2016-01-05T00:00:01Z"
query_number_wokers="8"
query_times="4000"

# cputest case time end, don't recommend modifying

# Not recommend modifying
# query_scales must have only one variable
# query_formats must include TDengine and must be less than or equal to three variables, or result analysis scripts will throw an exception
# query_formats only supports TDengine, influx, timescaledb.
query_scales="100"
query_formats="TDengine influx timescaledb"
